name: Workflow Security Check

# Security workflow to prevent unauthorized modifications to GitHub Actions workflows
#
# Purpose: Detect and prevent malicious changes to repository automation
# - GitHub Actions workflows can execute arbitrary code and access secrets
# - Unauthorized workflow modifications pose significant security risks
# - This workflow provides early warning and blocks non-admin workflow changes
#
# Security measures:
# - Detects any changes to .github/ directory files
# - Posts prominent warnings for workflow modifications
# - Tags repository admin for review
# - Fails the check for non-admin workflow modifications
# - Uses minimal permissions (principle of least privilege)

on:
  pull_request:
    types: [opened, edited, synchronize]

permissions:
  contents: read
  pull-requests: write

jobs:
  security-check:
    runs-on: ubuntu-latest
    name: Check for workflow modifications

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Check for .github directory modifications
        id: check-github-changes
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo, number } = context.issue;

            // Get the PR author
            const pr = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: number
            });
            const author = pr.data.user.login;
            console.log(`PR author: ${author}`);

            // Get list of files changed in the PR
            const files = await github.rest.pulls.listFiles({
              owner,
              repo,
              pull_number: number
            });

            // Check for changes to .github directory
            const githubDirChanges = files.data.filter(file =>
              file.filename.startsWith('.github/')
            );

            // Check specifically for workflow file changes
            const workflowChanges = files.data.filter(file =>
              file.filename.startsWith('.github/workflows/') &&
              (file.filename.endsWith('.yml') || file.filename.endsWith('.yaml'))
            );

            console.log(`GitHub directory changes: ${githubDirChanges.length}`);
            console.log(`Workflow changes: ${workflowChanges.length}`);

            // Set outputs for subsequent steps
            core.setOutput('github-changes', githubDirChanges.length > 0);
            core.setOutput('workflow-changes', workflowChanges.length > 0);
            core.setOutput('author', author);
            core.setOutput('changed-files', githubDirChanges.map(f => f.filename).join('\n'));
            core.setOutput('workflow-files', workflowChanges.map(f => f.filename).join('\n'));

      - name: Post security warning for .github changes
        if: steps.check-github-changes.outputs.github-changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo, number } = context.issue;
            const author = '${{ steps.check-github-changes.outputs.author }}';
            const changedFiles = `${{ steps.check-github-changes.outputs.changed-files }}`;
            const workflowFiles = `${{ steps.check-github-changes.outputs.workflow-files }}`;
            const hasWorkflowChanges = '${{ steps.check-github-changes.outputs.workflow-changes }}' === 'true';

            let warningLevel = '‚ö†Ô∏è';
            let title = 'GitHub Configuration Changes Detected';

            if (hasWorkflowChanges) {
              warningLevel = 'üö®';
              title = 'CRITICAL: GitHub Actions Workflow Changes Detected';
            }

            const fileList = changedFiles.split('\n').map(f => `- \`${f}\``).join('\n');

            let comment = `## ${warningLevel} ${title}\n\n`;

            if (hasWorkflowChanges) {
              comment += `**SECURITY ALERT**: This pull request modifies GitHub Actions workflow files.\n\n`;
              comment += `**Workflow files changed:**\n`;
              comment += workflowFiles.split('\n').map(f => `- \`${f}\``).join('\n') + '\n\n';
              comment += `‚ö†Ô∏è **Admin review required** - Workflow modifications can execute arbitrary code and access repository secrets.\n\n`;
            }

            comment += `**Files in .github/ directory modified:**\n${fileList}\n\n`;

            if (hasWorkflowChanges) {
              comment += `@cynthiateeters - **Immediate review required** for workflow security.\n\n`;
              comment += `**For the PR author (@${author})**: Please ensure these changes are necessary and have been reviewed for security implications.\n\n`;
            } else {
              comment += `@cynthiateeters - GitHub configuration files have been modified.\n\n`;
            }

            comment += `---\n*This is an automated security check to protect repository infrastructure.*`;

            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: number,
              body: comment
            });

      - name: Fail check for non-admin workflow modifications
        if: steps.check-github-changes.outputs.workflow-changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const author = '${{ steps.check-github-changes.outputs.author }}';
            const admins = ['cynthiateeters']; // Repository administrators

            if (!admins.includes(author)) {
              console.log(`‚ùå Non-admin user (${author}) attempted to modify workflow files`);
              core.setFailed(`Workflow modifications by non-admin users are not permitted for security reasons. Admin review required.`);
            } else {
              console.log(`‚úÖ Admin user (${author}) is modifying workflow files - allowed`);
            }

      - name: Security check summary
        if: always()
        run: |
          echo "üîç Security Check Summary:"
          echo "- GitHub directory changes: ${{ steps.check-github-changes.outputs.github-changes }}"
          echo "- Workflow file changes: ${{ steps.check-github-changes.outputs.workflow-changes }}"
          echo "- PR Author: ${{ steps.check-github-changes.outputs.author }}"

          if [ "${{ steps.check-github-changes.outputs.workflow-changes }}" = "true" ]; then
            echo "‚ö†Ô∏è WORKFLOW SECURITY CHECK TRIGGERED"
          else
            echo "‚úÖ No workflow security concerns detected"
          fi